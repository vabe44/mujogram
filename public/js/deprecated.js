// Generated by CoffeeScript 1.3.3
(function() {

  ({
    brightnessCheck: function() {
      var color, _fn, _i, _len, _ref,
        _this = this;
      _ref = this.colors.models;
      _fn = function(color) {
        var b, brightness, g, r;
        r = color.attributes.rgb.r;
        g = color.attributes.rgb.r;
        b = color.attributes.rgb.r;
        brightness = _this.darkOrLight(r, g, b).toFixed(2);
        console.log(brightness);
        color.set('brightness', brightness);
        color.save();
        return console.log(color);
      };
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        color = _ref[_i];
        _fn(color);
      }
      return console.log(JSON.stringify(this.colors.toJSON()));
    },
    darkOrLight: function(red, green, blue) {
      var brightness;
      brightness = (red * 299) + (green * 587) + (blue * 114);
      brightness = brightness / 255000;
      return brightness;
    },
    ralextractor: function() {
      var color, colors, _fn, _i, _len,
        _this = this;
      colors = this.$('#ralextractor').find('tr');
      _fn = function(color) {
        var bVal, colorHash, gVal, rVal, rgbvals;
        rgbvals = $(color).find('b').text().trim().split(' ');
        rVal = rgbvals[0];
        gVal = rgbvals[1];
        bVal = rgbvals[2];
        colorHash = {
          name: $(color).find('.name').text().trim(),
          ral: $(color).find('.ralcolor').text().trim(),
          rgb: {
            r: rVal,
            g: gVal,
            b: bVal,
            rgb: "" + rVal + ", " + gVal + ", " + bVal
          },
          hex: $(color).find('.hexcolor').text().trim()
        };
        return _this.colors.push(colorHash);
      };
      for (_i = 0, _len = colors.length; _i < _len; _i++) {
        color = colors[_i];
        _fn(color);
      }
      console.log(this.colors);
      return window.colors = this.colors;
    }
  });

}).call(this);
